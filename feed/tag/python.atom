<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RyanCollins.org - python</title><link href="https://ryancollins.org/" rel="alternate"></link><link href="https://ryancollins.org/feed/tag/python.atom" rel="self"></link><id>https://ryancollins.org/</id><updated>2013-11-15T19:53:21-05:00</updated><entry><title>Learn Python from Google</title><link href="https://ryancollins.org/2013/11/15/learn-python-from-google/" rel="alternate"></link><published>2013-11-15T19:53:21-05:00</published><updated>2013-11-15T19:53:21-05:00</updated><author><name>mr.rcollins</name></author><id>tag:ryancollins.org,2013-11-15:/2013/11/15/learn-python-from-google/</id><summary type="html">&lt;p&gt;&lt;a href="http://blog.hartleybrody.com/google-python/"&gt;Google’s Python Lessons are Awesome&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The lovably geeky Nick Parlante — a Google employee and CS lecturer at Stanford — has written some awesomely succinct tutorials that not only tell you how you can use Python, but also how you should use Python. This makes them a fantastic resource, regardless of …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://blog.hartleybrody.com/google-python/"&gt;Google’s Python Lessons are Awesome&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The lovably geeky Nick Parlante — a Google employee and CS lecturer at Stanford — has written some awesomely succinct tutorials that not only tell you how you can use Python, but also how you should use Python. This makes them a fantastic resource, regardless of whether you’re just starting, or you’ve been working with Python for awhile.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;via: &lt;a href="https://mobile.twitter.com/seankaiser/statuses/398075622913609728"&gt;@seankaiser&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category><category term="google"></category></entry><entry><title>Pythonista, programming on your iPhone and iPad</title><link href="https://ryancollins.org/2013/08/07/pythonista-programming-on-your-iphone-and-ipad/" rel="alternate"></link><published>2013-08-07T10:42:48-04:00</published><updated>2013-08-07T10:42:48-04:00</updated><author><name>mr.rcollins</name></author><id>tag:ryancollins.org,2013-08-07:/2013/08/07/pythonista-programming-on-your-iphone-and-ipad/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Let me show you something that will make you feel young as when the world was new. -- Dr. Carol Marcus&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I feel like a teenager again while playing around with &lt;a href="https://itunes.apple.com/us/app/pythonista/id528579881?mt=8"&gt;Pythonista (Universal, $6.99)&lt;/a&gt;, an app for iOS allows you to program in python directly on the device. It reminds …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Let me show you something that will make you feel young as when the world was new. -- Dr. Carol Marcus&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I feel like a teenager again while playing around with &lt;a href="https://itunes.apple.com/us/app/pythonista/id528579881?mt=8"&gt;Pythonista (Universal, $6.99)&lt;/a&gt;, an app for iOS allows you to program in python directly on the device. It reminds me a lot about when I was learning to program in BASIC on my Atari 800XL (my favorite computer ever, although my iPod Touch is a close second). With Pythonista, I can finally write little apps to make my day easier. A lot nicer than going to the App store, downloading a bunch of free apps, all which have obnoxious ads and don't do quite what I want.&lt;/p&gt;
&lt;p&gt;My first script was written to automate my 365 project. A project that I am terrible at keeping up, but now my DOY script will make it easier when I post once a month. I always struggle with the text I add at the end of my description for the picture, where I calculate the day of the year:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#365 (218/365)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'd end up having to go to a website to find out what the day of the year it was. Well, at least that's what I did in the past. Now I have written the following script and created a &lt;a href="http://omz-software.com/pythonista/shortcut/"&gt;shortcut to it&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# We&amp;#39;re going to need work with dates, access to the clipboard,&lt;/span&gt;
&lt;span class="c"&gt;# and to launch an app (you use the webbrowser to do that).&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;clipboard&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webbrowser&lt;/span&gt;

&lt;span class="c"&gt;# Figure out the day of the year&lt;/span&gt;
&lt;span class="n"&gt;day_of_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_yday&lt;/span&gt;

&lt;span class="c"&gt;# Create out tag line&lt;/span&gt;
&lt;span class="n"&gt;clip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; #365 (&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;day_of_year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/365)&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Put it in the clipboard&lt;/span&gt;
&lt;span class="n"&gt;clipboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Open Camera+&lt;/span&gt;
&lt;span class="n"&gt;webbrowser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cameraplus://&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Camera+ has a shoot and share mode, which is what I have set as the default. So now I click on the DOY icon, Pythonista does its thing and Camera+ opens up. I take the picture, type my witty caption, and paste the tagline. Very, very cool.&lt;/p&gt;
&lt;p&gt;Pythonista can also export your script as an XCode project, one that you can load into XCode and create an actual iOS app. I haven't had the chance to try that out yet. A couple of negatives. Getting scripts into Pythonista can be a lesson in patience. Due to Apple's limitations on loading code, you cannot simply load code from your Dropbox or other sources, you have to copy and paste. This also means that scripts on your iPhone are automatically synced to your iPad. There is a Dropbox workaround, but I haven't had the chance to try it out yet. The other negative that I've found so far is that there isn't a built in user interface library, so you're limited to text or creating your own graphics for things like buttons.&lt;/p&gt;
&lt;p&gt;All in all, it's well worth the price (especially since it's universal!).&lt;/p&gt;</content><category term="ios"></category><category term="iphone"></category><category term="ipad"></category><category term="python"></category><category term="programming"></category><category term="pythonista"></category></entry><entry><title>Good bye Wordpress, hello Pelican</title><link href="https://ryancollins.org/2013/05/06/good-bye-wordpress-hello-pelican/" rel="alternate"></link><published>2013-05-06T19:43:00-04:00</published><updated>2013-05-06T19:43:00-04:00</updated><author><name>mr.rcollins</name></author><id>tag:ryancollins.org,2013-05-06:/2013/05/06/good-bye-wordpress-hello-pelican/</id><summary type="html">&lt;p&gt;This website has undergone various transformations over the last 10 years. Looking back at the first incarnations from 2003 shows a site that reminds me a lot of current day Facebook and Twitter. An example of my words of wisdom from 2003:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And tonight marks the end of a great …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;This website has undergone various transformations over the last 10 years. Looking back at the first incarnations from 2003 shows a site that reminds me a lot of current day Facebook and Twitter. An example of my words of wisdom from 2003:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And tonight marks the end of a great TV series that it seemed like nobody was watching. Buffy the Vampire Slayer ends its seven season run with the episode "Chosen".&lt;/p&gt;
&lt;p&gt;I feel that this series never got the recognition it deserved, with such great episodes like Hush and Once more with Feeling, the creator Joss Whedon was never afraid to totally change your perception of characters. &lt;/p&gt;
&lt;p&gt;At least Angel will be back this fall, and I've been buying the Buffy DVDs. The plan is to watch Season 2 this fall on Tuesday nights.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(I now own the entire series of Buffy on DVD, just in case you were worried)&lt;/p&gt;
&lt;p&gt;In those days I was running Postnuke, and apparently by 2005 I had switched over to Wordpress, which I had used up until last month. I have nothing against Wordpress, and for a majority of users, Wordpress is the way to go. For myself, I was getting tired of administrating the site more than writing and I wanted more speed without jumping through a bunch of hoops. So last month I switch to &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pelican is a website generator written in Python. The difference between something like Wordpress and Pelican is that Wordpress parses each web page as a user views it while Pelican generates the site ahead of time as html pages that can be uploaded anywhere. This means I can host my website any place that supports static web pages. I'm currently using a virtual private service (VPS) to host my website. When I'm tired of administrating my VPS, I can easily switch to publishing on Amazon S3. Other options include the &lt;em&gt;Public&lt;/em&gt; folder in Dropbox or in Google Drive.&lt;/p&gt;
&lt;p&gt;Another aspect of Pelican I really like is the ability to check my entire site into version control (git in my case). With version control, I can easily work on new branches of the site without disturbing the current site. And, if you're bored, you can &lt;a href="https://github.com/mrrcollins/ryancollins.org"&gt;fork the repo of the site at Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My comments were already switched over to Disqus, and I was able to mimic the same urls from Wordpress in Pelican. This allowed me to use my Disqus comments as is.&lt;/p&gt;
&lt;p&gt;There are two pieces that I need to work on. One is to set up some way to schedule posts, and the other is a theme that's not the default. Oh, I also need to go through all my old posts and fix the categories. Wordpress allowed multiple categories per post, Pelican does not.&lt;/p&gt;</content><category term="wordpress"></category><category term="pelican"></category><category term="python"></category><category term="geek"></category></entry></feed>